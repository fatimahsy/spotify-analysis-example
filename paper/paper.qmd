---
title: "Coldplay"
author: 
  - Talia Fabregas
  - Lexi Knight
  - Aliza Mithwani
  - Fatimah Yunusa
thanks: "Code and data are available at: https://github.com/taliafabs/spotify-analysis-example."
date: today
date-format: long
abstract: "abstract."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(dplyr)
library(janitor)
library(spotifyr)
library(ggplot2)
library(usethis)

nationals <- read_rds(here::here("data/01-raw_data/nationals_raw.rds"))
coldplay <- read_rds(here::here("data/01-raw_data/coldplay_raw.rds"))
coldplay <- as_tibble(coldplay)
nationals <- as_tibble(nationals)
```

# Introduction
Coldplay and The National, though distinct in musical style, have both achieved significant success in the music industry. Coldplay's anthemic, pop-rock sound contrasts with The National’s introspective, melancholic approach. While Coldplay’s music is often described as more danceable, The National’s emotionally charged songs connect deeply with a loyal fan base. However, little research has explored how these bands’ musical qualities, particularly danceability, influence their popularity 
This paper aims to address this gap by comparing the danceability and popularity of Coldplay and The National using data from Spotify’s API. By analyzing their top tracks, we identify key differences in musical features and assess how these factors contribute to their success. Our findings show that Coldplay generally scores higher in danceability, while The National’s popularity tends to align with different musical qualities.
This comparison highlights the role of musical features in shaping an artist’s success and provides insights into how diverse musical styles can engage audiences. 

# Data {#sec-data}

## Overview
We got our data from Spotify API. We used R programming language [@citeR]. We obtained our data through the Spotify API [@spotifyr]

## Method
To access the Spotify API, we used an existing Spotify account on the Spotify Developer website. We extracted the “Client ID” and “Client Secret” from the Spotify Developer website and used that in our code to link our RStudio to the Spotify account. We imported the spotifyr library and used the get_artist_audio_features function to extract information about the two artists. We saved this as an RDS file because each observation is a tibble, hence, we cannot save it as a CSV.

# Visualizations
```{r}
#| warning: false
#| message: false

rbind(nationals, coldplay) |>
  select(artist_name, album_release_date, duration_ms) |>
  mutate(album_release_date = ymd(album_release_date)) |> 
  ggplot(aes( x = album_release_date, y = duration_ms, color = artist_name)) +
  geom_point(alpha = 0.3) +
  geom_smooth() +
  theme_minimal() +
  facet_wrap(facets = vars(artist_name), dir = "v") +
  labs(
    x = "Album release date",
    y = "Song duration (ms)",
    color = "Artist"
  ) +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom")
```

```{r}
#| warning: false
#| message: false

rbind(nationals, coldplay) |>
  select(artist_name, album_release_date, danceability) |>
  mutate(album_release_date = ymd(album_release_date)) |> 
  ggplot(aes( x = album_release_date, y = danceability, color = artist_name)) +
  geom_point(alpha = 0.3) +
  geom_smooth() +
  theme_minimal() +
  facet_wrap(facets = vars(artist_name), dir = "v") +
  labs(
    x = "Album release date",
    y = "Danceability",
    color = "Artist"
  ) +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom")
```
	
```{r}
#| warning: false
#| message: false
rbind(nationals, coldplay) |>
  select(artist_name, album_release_date, danceability) |>
  mutate(album_release_date = ymd(album_release_date)) |> 
  ggplot(aes( x = album_release_date, y = danceability, color = artist_name)) +
  geom_point(alpha = 0.3) +
  geom_smooth() +
  theme_minimal() +
  facet_wrap(facets = vars(artist_name), dir = "v") +
  labs(
    x = "Album release date",
    y = "Popularity",
    color = "Artist"
  ) +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom")
```
# Discussion
How we would do this
strengths and weaknesses of approach




\newpage


# References


